title="Histórico do total de funcionários (por mês)")+
theme_light()
#Gera gráfico histórico com a quantidade de desligamentos, por mês
ggplot(data = baseTO) +
geom_col(aes(x = dtMesAno, y = qtdDesligamentos), fill = "lightsalmon3") +
geom_text(aes(x = dtMesAno, y = qtdDesligamentos, label= qtdDesligamentos, vjust = -1, fontface="bold")) +
ylim(0,105) +
labs(x= "Meses",
y= "Quantidade total funcionários",
title="Histórico do total de funcionários (por mês)")+
theme_light()
#Gera gráfico histórico com a quantidade de desligamentos, por mês
ggplot(data = baseTO) +
geom_col(aes(x = dtMesAno, y = qtdDesligamentos), fill = "skyblue4") +
geom_text(aes(x = dtMesAno, y = qtdDesligamentos, label= qtdDesligamentos, vjust = -1, fontface="bold")) +
ylim(0,105) +
labs(x= "Meses",
y= "Quantidade total funcionários",
title="Histórico do total de funcionários (por mês)")+
theme_light()
#Gera gráfico histórico com a quantidade total de funcionários, por mês
ggplot(data = baseTO) +
geom_col(aes(x = dtMesAno, y = qtdTotalQuadro), fill = "lightsteelblue2") +
geom_text(aes(x = dtMesAno, y = qtdTotalQuadro, label= qtdTotalQuadro, vjust = -1, fontface="bold")) +
ylim(0,2100) +
labs(x= "Meses",
y= "Quantidade total funcionários",
title="Histórico do total de funcionários (por mês)")+
theme_light()
#Gera gráfico histórico com a quantidade total de funcionários, por mês
ggplot(data = baseTO) +
geom_col(aes(x = dtMesAno, y = qtdTotalQuadro), fill = "lightsteelblue1") +
geom_text(aes(x = dtMesAno, y = qtdTotalQuadro, label= qtdTotalQuadro, vjust = -1, fontface="bold")) +
ylim(0,2100) +
labs(x= "Meses",
y= "Quantidade total funcionários",
title="Histórico do total de funcionários (por mês)")+
theme_light()
#Gera gráfico histórico com a quantidade total de funcionários, por mês
ggplot(data = baseTO) +
geom_col(aes(x = dtMesAno, y = qtdTotalQuadro), fill = "lightsteelblue3") +
geom_text(aes(x = dtMesAno, y = qtdTotalQuadro, label= qtdTotalQuadro, vjust = -1, fontface="bold")) +
ylim(0,2100) +
labs(x= "Meses",
y= "Quantidade total funcionários",
title="Histórico do total de funcionários (por mês)")+
theme_light()
#Gera gráfico histórico com a quantidade de desligamentos, por mês
ggplot(data = baseTO) +
geom_col(aes(x = dtMesAno, y = qtdDesligamentos), fill = "skyblue4") +
geom_text(aes(x = dtMesAno, y = qtdDesligamentos, label= qtdDesligamentos, vjust = -1, fontface="bold")) +
ylim(0,105) +
labs(x= "Meses",
y= "Quantidade total funcionários",
title="Histórico do total de funcionários (por mês)")+
theme_light()
#Gera gráfico histórico com a quantidade de desligamentos, por mês
ggplot(data = baseTO) +
geom_col(aes(x = dtMesAno, y = qtdDesligamentos), fill = "skyblue4") +
geom_text(aes(x = dtMesAno, y = qtdDesligamentos, label= qtdDesligamentos, vjust = -1, fontface="bold")) +
ylim(0,105) +
labs(x= "Meses",
y= "Quantidade desligamentos",
title="Histórico dos desligamentos de funcionários (por mês)") +
theme_light()
#Gera gráfico histórico com percentual de turnover, por mês
ggplot(data = baseTO) +
geom_line(aes(x = dtMesAno, y = labelPerTurnover)) +
geom_point(aes(x = dtMesAno, y = labelPerTurnover, size = 3, color= "orange3")) +
geom_text(aes(x = dtMesAno, y = labelPerTurnover, label= format(labelPerTurnover, digits= 3), vjust = 2, angle = 45, fontface="bold")) +
ylim(1,7) +
labs(x= "Meses",
y= "% Turnover",
title="Histórico do percentual de turnover (por mês)")+
theme_light()
#Gera gráfico histórico com a quantidade de desligamentos, por mês
ggplot(data = baseTO) +
geom_col(aes(x = dtMesAno, y = qtdDesligamentos), fill = "skyblue4") +
geom_text(aes(x = dtMesAno, y = qtdDesligamentos, label= qtdDesligamentos, vjust = -1, fontface="bold")) +
ylim(0,105) +
labs(x= "Meses",
y= "Quantidade desligamentos",
title="Histórico dos desligamentos de funcionários (por mês)") +
theme_light()
#Gera gráfico histórico com a quantidade de desligamentos, por mês
ggplot(data = baseTO) +
geom_col(aes(x = dtMesAno, y = qtdDesligamentos), fill = "skyblue4") +
geom_text(aes(x = dtMesAno, y = qtdDesligamentos, label= qtdDesligamentos, vjust = -1, fontface="bold")) +
ylim(0,105) +
labs(x= "Meses",
y= "Quantidade desligamentos",
title="Histórico dos desligamentos de funcionários (por mês)") +
theme_light()
#Gera gráfico histórico com a quantidade total de funcionários, por mês
ggplot(data = baseTO) +
geom_col(aes(x = dtMesAno, y = qtdTotalQuadro), fill = "lightsteelblue3") +
geom_text(aes(x = dtMesAno, y = qtdTotalQuadro, label= qtdTotalQuadro, vjust = -1, fontface="bold")) +
ylim(0,2100) +
labs(x= "Meses",
y= "Quantidade total funcionários",
title="Histórico do total de funcionários (por mês)")+
theme_light()
#Gera gráfico histórico com percentual de turnover, por mês
ggplot(data = baseTO) +
geom_line(aes(x = dtMesAno, y = labelPerTurnover)) +
geom_point(aes(x = dtMesAno, y = labelPerTurnover, size = 3, color= "orange3")) +
geom_text(aes(x = dtMesAno, y = labelPerTurnover, label= format(labelPerTurnover, digits= 3), vjust = 2, angle = 45, fontface="bold")) +
ylim(1,7) +
labs(x= "Meses",
y= "% Turnover",
title="Histórico do percentual de turnover (por mês)")+
theme_light()
#Gera gráfico histórico com a quantidade de desligamentos, por mês
ggplot(data = baseTO) +
geom_col(aes(x = dtMesAno, y = qtdDesligamentos), fill = "skyblue4") +
geom_text(aes(x = dtMesAno, y = qtdDesligamentos, label= qtdDesligamentos, vjust = -1, fontface="bold")) +
ylim(0,105) +
labs(x= "Meses",
y= "Quantidade desligamentos",
title="Histórico dos desligamentos de funcionários (por mês)") +
theme_light()
#Exibe metricas descritivas da base processo antigo
summary(baseTOProcessoAntigo["qtdTotalQuadro"])
summary(baseTOProcessoAntigo["qtdDesligamentos"])
summary(baseTOProcessoAntigo["perTurnover"])
#Exibe metricas descritivas da base processo novo
summary(baseTOProcessoNovo["qtdTotalQuadro"])
summary(baseTOProcessoNovo["qtdDesligamentos"])
summary(baseTOProcessoNovo["perTurnover"])
xxx< - summary(baseTOProcessoNovo["perTurnover"])
xxx < - summary(baseTOProcessoNovo["perTurnover"])
metrica <- summary(baseTOProcessoNovo["perTurnover"])
rm(metrica)
#Cria um vetor com o nome dos pacotes a serem instalados
pacotes <- c("tidyverse",
"ggplot2",
"readxl",
"qcc",
"dplyr")
#Instala e carrega os pacotes
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
#Remove o vetor pacotes
rm(pacotes)
#Importa base de dados para o novo objeto baseTO
baseTO <- read_xlsx("03 - baseTO-v1.xlsx")
#Adiciona variável no data frame com calculo do percentual de turnover
#Dentro do conceito do Seis Sigma este calculo é equivalente ao:
# >> DPO = Defeitos por Oportunidade
baseTO["perTurnover"] <- (baseTO["qtdDesligamentos"] / baseTO["qtdTotalQuadro"])
#Workaround
baseTO["probabilidade_EXP"] <- (exp(-baseTO["perTurnover"]))
for (tmpProbabilidade in baseTO["probabilidade_EXP"]) {}
baseTO["zBench"] <- qnorm(tmpProbabilidade,mean=0, sd=1, lower.tail = TRUE, log.p = FALSE)
rm(tmpProbabilidade)
#Adiciona variável no data frame com calculo da Capacidade Sigma do processo
baseTO["capSigma"] <- (1.5 + baseTO["zBench"])
#Exibe metricas descritivas da base geral
summary(baseTO["qtdTotalQuadro"])
summary(baseTO["qtdDesligamentos"])
summary(baseTO["perTurnover"])
#Visualizar base comparativa - Processo antigo
subset(baseTO, baseTO["processo"] == "antigo" & baseTO["baseComp"] == "sim")
#Visualizar base comparativa - Processo novo
subset(baseTO, baseTO["processo"] == "novo" & baseTO["baseComp"] == "sim")
#Cria bases dos processo antigo e processo novo
baseTOProcessoAntigo <- subset(baseTO, baseTO["processo"] == "antigo" & baseTO["baseComp"] == "sim")
baseTOProcessoNovo <- subset(baseTO, baseTO["processo"] == "novo" & baseTO["baseComp"] == "sim")
#Exibe metricas descritivas da base processo antigo
summary(baseTOProcessoAntigo["qtdTotalQuadro"])
summary(baseTOProcessoAntigo["qtdDesligamentos"])
summary(baseTOProcessoAntigo["perTurnover"])
#Exibe metricas descritivas da base processo novo
summary(baseTOProcessoNovo["qtdTotalQuadro"])
summary(baseTOProcessoNovo["qtdDesligamentos"])
summary(baseTOProcessoNovo["perTurnover"])
#Calcula indicadores do processo antigo, para o periodo a ser comparado
perTurnoverAntigo <- (sum(baseTOProcessoAntigo["qtdDesligamentos"]) / sum(baseTOProcessoAntigo["qtdTotalQuadro"]))
zBenchAntigo <- (qnorm(exp(-perTurnoverAntigo),mean=0, sd=1, lower.tail = TRUE, log.p = FALSE))
capSigmaAntigo <- (1.5 + zBenchAntigo)
#Calcula indicadores do processo novo, para o periodo a ser comparado
perTurnoverNovo <- (sum(baseTOProcessoNovo["qtdDesligamentos"]) / sum(baseTOProcessoNovo["qtdTotalQuadro"]))
zBenchNovo<- (qnorm(exp(-perTurnoverNovo),mean=0, sd=1, lower.tail = TRUE, log.p = FALSE))
capSigmaNovo <- (1.5 + zBenchNovo)
#Visualiza os dados para o teste Qui-Quadrado
sum(baseTOProcessoAntigo["qtdDesligamentos"])
sum(baseTOProcessoAntigo["qtdTotalQuadro"]) - sum(baseTOProcessoAntigo["qtdDesligamentos"])
sum(baseTOProcessoNovo["qtdDesligamentos"])
sum(baseTOProcessoNovo["qtdTotalQuadro"]) - sum(baseTOProcessoNovo["qtdDesligamentos"])
#Cria tabela com dados a serem utilizados no teste de Qui-Quadrado
baseQuiQuadrado <- data.frame (desligados = c(sum(baseTOProcessoAntigo["qtdDesligamentos"]) , sum(baseTOProcessoNovo["qtdDesligamentos"]) ),
NaoDesligados = c(sum(baseTOProcessoAntigo["qtdTotalQuadro"]) - sum(baseTOProcessoAntigo["qtdDesligamentos"]) , sum(baseTOProcessoNovo["qtdTotalQuadro"]) - sum(baseTOProcessoNovo["qtdDesligamentos"])))
#Executa o teste de Qui-Quadrado
chisq.test(baseQuiQuadrado)
#Adiciona uma colula com percentual de turnover formatado, para gerar uma melhor visualização.
baseTO["labelPerTurnover"] <- (baseTO["perTurnover"] * 100)
#Gera gráfico histórico com percentual de turnover, por mês
ggplot(data = baseTO) +
geom_line(aes(x = dtMesAno, y = labelPerTurnover)) +
geom_point(aes(x = dtMesAno, y = labelPerTurnover, size = 3, color= "orange3")) +
geom_text(aes(x = dtMesAno, y = labelPerTurnover, label= format(labelPerTurnover, digits= 3), vjust = 2, angle = 45, fontface="bold")) +
ylim(1,7) +
labs(x= "Meses",
y= "% Turnover",
title="Histórico do percentual de turnover (por mês)")+
theme_light()
#Gera gráfico histórico com percentual de turnover, por mês
ggplot(data = baseTO) +
geom_line(aes(x = dtMesAno, y = labelPerTurnover)) +
geom_point(aes(x = dtMesAno, y = labelPerTurnover, size = 3, color= "orange3")) +
geom_text(aes(x = dtMesAno, y = labelPerTurnover, label= format(labelPerTurnover, digits= 3), vjust = 2, angle = 45, fontface="bold")) +
ylim(1,7) +
labs(x= "Meses",
y= "% Turnover",
title="Histórico do percentual de turnover (por mês)")+
theme_light()
#Gera gráfico histórico com a quantidade total de funcionários, por mês
ggplot(data = baseTO) +
geom_col(aes(x = dtMesAno, y = qtdTotalQuadro), fill = "lightsteelblue3") +
geom_text(aes(x = dtMesAno, y = qtdTotalQuadro, label= qtdTotalQuadro, vjust = -1, fontface="bold")) +
ylim(0,2100) +
labs(x= "Meses",
y= "Quantidade total funcionários",
title="Histórico do total de funcionários (por mês)")+
theme_light()
#Gera gráfico histórico com a quantidade de desligamentos, por mês
ggplot(data = baseTO) +
geom_col(aes(x = dtMesAno, y = qtdDesligamentos), fill = "skyblue4") +
geom_text(aes(x = dtMesAno, y = qtdDesligamentos, label= qtdDesligamentos, vjust = -1, fontface="bold")) +
ylim(0,105) +
labs(x= "Meses",
y= "Quantidade desligamentos",
title="Histórico dos desligamentos de funcionários (por mês)") +
theme_light()
#Gera gráfico histórico com a quantidade de desligamentos, por mês
ggplot(data = baseTO) +
geom_col(aes(x = dtMesAno, y = qtdDesligamentos), fill = "skyblue4") +
geom_text(aes(x = dtMesAno, y = qtdDesligamentos, label= qtdDesligamentos, vjust = -1, fontface="bold")) +
ylim(0,105) +
labs(x= "Meses",
y= "Quantidade desligamentos",
title="Histórico dos desligamentos de funcionários (por mês)") +
theme_light()
#Cria um vetor com o nome dos pacotes a serem instalados
pacotes <- c("tidyverse",
"ggplot2",
"readxl",
"qcc",
"dplyr")
#Instala e carrega os pacotes
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
#Remove o vetor pacotes
rm(pacotes)
#Importa base de dados para o novo objeto baseTO
baseTO <- read_xlsx("03 - baseTO-v1.xlsx")
#Adiciona variável no data frame com calculo do percentual de turnover
#Dentro do conceito do Seis Sigma este calculo é equivalente ao:
# >> DPO = Defeitos por Oportunidade
baseTO["perTurnover"] <- (baseTO["qtdDesligamentos"] / baseTO["qtdTotalQuadro"])
#Workaround
baseTO["probabilidade_EXP"] <- (exp(-baseTO["perTurnover"]))
for (tmpProbabilidade in baseTO["probabilidade_EXP"]) {}
baseTO["zBench"] <- qnorm(tmpProbabilidade,mean=0, sd=1, lower.tail = TRUE, log.p = FALSE)
rm(tmpProbabilidade)
#Adiciona variável no data frame com calculo da Capacidade Sigma do processo
baseTO["capSigma"] <- (1.5 + baseTO["zBench"])
#Exibe metricas descritivas da base geral
summary(baseTO["qtdTotalQuadro"])
summary(baseTO["qtdDesligamentos"])
summary(baseTO["perTurnover"])
#Visualizar base comparativa - Processo antigo
subset(baseTO, baseTO["processo"] == "antigo" & baseTO["baseComp"] == "sim")
#Cria bases dos processo antigo e processo novo
baseTOProcessoAntigo <- subset(baseTO, baseTO["processo"] == "antigo" & baseTO["baseComp"] == "sim")
baseTOProcessoNovo <- subset(baseTO, baseTO["processo"] == "novo" & baseTO["baseComp"] == "sim")
#Exibe metricas descritivas da base processo antigo
summary(baseTOProcessoAntigo["qtdTotalQuadro"])
summary(baseTOProcessoAntigo["qtdDesligamentos"])
summary(baseTOProcessoAntigo["perTurnover"])
#Exibe metricas descritivas da base processo novo
summary(baseTOProcessoNovo["qtdTotalQuadro"])
summary(baseTOProcessoNovo["qtdDesligamentos"])
summary(baseTOProcessoNovo["perTurnover"])
#Calcula indicadores do processo antigo, para o periodo a ser comparado
perTurnoverAntigo <- (sum(baseTOProcessoAntigo["qtdDesligamentos"]) / sum(baseTOProcessoAntigo["qtdTotalQuadro"]))
zBenchAntigo <- (qnorm(exp(-perTurnoverAntigo),mean=0, sd=1, lower.tail = TRUE, log.p = FALSE))
capSigmaAntigo <- (1.5 + zBenchAntigo)
#Calcula indicadores do processo novo, para o periodo a ser comparado
perTurnoverNovo <- (sum(baseTOProcessoNovo["qtdDesligamentos"]) / sum(baseTOProcessoNovo["qtdTotalQuadro"]))
zBenchNovo<- (qnorm(exp(-perTurnoverNovo),mean=0, sd=1, lower.tail = TRUE, log.p = FALSE))
capSigmaNovo <- (1.5 + zBenchNovo)
#Visualiza os dados para o teste Qui-Quadrado
sum(baseTOProcessoAntigo["qtdDesligamentos"])
sum(baseTOProcessoAntigo["qtdTotalQuadro"]) - sum(baseTOProcessoAntigo["qtdDesligamentos"])
sum(baseTOProcessoNovo["qtdDesligamentos"])
sum(baseTOProcessoNovo["qtdTotalQuadro"]) - sum(baseTOProcessoNovo["qtdDesligamentos"])
#Cria tabela com dados a serem utilizados no teste de Qui-Quadrado
baseQuiQuadrado <- data.frame (desligados = c(sum(baseTOProcessoAntigo["qtdDesligamentos"]) , sum(baseTOProcessoNovo["qtdDesligamentos"]) ),
NaoDesligados = c(sum(baseTOProcessoAntigo["qtdTotalQuadro"]) - sum(baseTOProcessoAntigo["qtdDesligamentos"]) , sum(baseTOProcessoNovo["qtdTotalQuadro"]) - sum(baseTOProcessoNovo["qtdDesligamentos"])))
#Executa o teste de Qui-Quadrado
chisq.test(baseQuiQuadrado)
#Adiciona uma colula com percentual de turnover formatado, para gerar uma melhor visualização.
baseTO["labelPerTurnover"] <- (baseTO["perTurnover"] * 100)
#Gera gráfico histórico com percentual de turnover, por mês
ggplot(data = baseTO) +
geom_line(aes(x = dtMesAno, y = labelPerTurnover)) +
geom_point(aes(x = dtMesAno, y = labelPerTurnover, size = 3, color= "orange3")) +
geom_text(aes(x = dtMesAno, y = labelPerTurnover, label= format(labelPerTurnover, digits= 3), vjust = 2, angle = 45, fontface="bold")) +
ylim(1,7) +
labs(x= "Meses",
y= "% Turnover",
title="Histórico do percentual de turnover (por mês)")+
theme_light()
#Gera gráfico histórico com a quantidade total de funcionários, por mês
ggplot(data = baseTO) +
geom_col(aes(x = dtMesAno, y = qtdTotalQuadro), fill = "lightsteelblue3") +
geom_text(aes(x = dtMesAno, y = qtdTotalQuadro, label= qtdTotalQuadro, vjust = -1, fontface="bold")) +
ylim(0,2100) +
labs(x= "Meses",
y= "Quantidade total funcionários",
title="Histórico do total de funcionários (por mês)")+
theme_light()
#Gera gráfico histórico com a quantidade de desligamentos, por mês
ggplot(data = baseTO) +
geom_col(aes(x = dtMesAno, y = qtdDesligamentos), fill = "skyblue4") +
geom_text(aes(x = dtMesAno, y = qtdDesligamentos, label= qtdDesligamentos, vjust = -1, fontface="bold")) +
ylim(0,105) +
labs(x= "Meses",
y= "Quantidade desligamentos",
title="Histórico dos desligamentos de funcionários (por mês)") +
theme_light()
#Gera gráfico histórico com a quantidade total de funcionários, por mês
ggplot(data = baseTO) +
geom_col(aes(x = dtMesAno, y = qtdTotalQuadro), fill = "lightsteelblue3") +
geom_text(aes(x = dtMesAno, y = qtdTotalQuadro, label= qtdTotalQuadro, vjust = -1, fontface="bold")) +
ylim(0,2100) +
labs(x= "Meses",
y= "Quantidade total funcionários",
title="Histórico do total de funcionários (por mês)")+
theme_light()
#Gera gráfico histórico com percentual de turnover, por mês
ggplot(data = baseTO) +
geom_line(aes(x = dtMesAno, y = labelPerTurnover)) +
geom_point(aes(x = dtMesAno, y = labelPerTurnover, size = 3, color= "orange3")) +
geom_text(aes(x = dtMesAno, y = labelPerTurnover, label= format(labelPerTurnover, digits= 3), vjust = 2, angle = 45, fontface="bold")) +
ylim(1,7) +
labs(x= "Meses",
y= "% Turnover",
title="Histórico do percentual de turnover (por mês)")+
theme_light()
#Executa o teste de Qui-Quadrado
chisq.test(baseQuiQuadrado)
View(baseQuiQuadrado)
View(baseTOProcessoAntigo)
View(baseTOProcessoNovo)
baseQuiQuadrado
chisq.test(baseQuiQuadrado)
chisq.test(baseQuiQuadrado)
load("C:/Users/leand/OneDrive/Mesa de trabalho/TCC/Projeto TO - R Studio/Turnover_Funcionarios/.RData")
#Cria um vetor com o nome dos pacotes a serem instalados
pacotes <- c("tidyverse",
"ggplot2",
"readxl",
"qcc",
"dplyr")
#Instala e carrega os pacotes
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
#Cria um vetor com o nome dos pacotes a serem instalados
pacotes <- c("tidyverse",
"ggplot2",
"readxl",
"qcc",
"dplyr")
#Instala e carrega os pacotes
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
#Remove o vetor pacotes
rm(pacotes)
#Importa base de dados para o novo objeto baseTO
baseTO <- read_xlsx("03 - baseTO-v1.xlsx")
#Adiciona variável no data frame com calculo do percentual de turnover
#Dentro do conceito do Seis Sigma este calculo é equivalente ao:
# >> DPO = Defeitos por Oportunidade
baseTO["perTurnover"] <- (baseTO["qtdDesligamentos"] / baseTO["qtdTotalQuadro"])
#Adiciona variável no data frame com calculo do percentual de turnover
#Dentro do conceito do Seis Sigma este calculo é equivalente ao:
# >> DPO = Defeitos por Oportunidade
baseTO["perTurnover"] <- (baseTO["qtdDesligamentos"] / baseTO["qtdTotalQuadro"])
#Importa base de dados para o novo objeto baseTO
baseTO <- read_xlsx("03 - baseTO-v1.xlsx")
#Adiciona variável no data frame com calculo do percentual de turnover
#Dentro do conceito do Seis Sigma este calculo é equivalente ao:
# >> DPO = Defeitos por Oportunidade
baseTO["perTurnover"] <- (baseTO["qtdDesligamentos"] / baseTO["qtdTotalQuadro"])
#Workaround
baseTO["probabilidade_EXP"] <- (exp(-baseTO["perTurnover"]))
#Adiciona variável no data frame com calculo da Capacidade Sigma do processo
baseTO["capSigma"] <- (1.5 + baseTO["zBench"])
#Workaround
baseTO["probabilidade_EXP"] <- (exp(-baseTO["perTurnover"]))
for (tmpProbabilidade in baseTO["probabilidade_EXP"]) {}
baseTO["zBench"] <- qnorm(tmpProbabilidade,mean=0, sd=1, lower.tail = TRUE, log.p = FALSE)
rm(tmpProbabilidade)
#Adiciona variável no data frame com calculo da Capacidade Sigma do processo
baseTO["capSigma"] <- (1.5 + baseTO["zBench"])
#Exibe metricas descritivas da base geral
summary(baseTO["qtdTotalQuadro"])
summary(baseTO["qtdDesligamentos"])
summary(baseTO["perTurnover"])
#Visualizar base comparativa - Processo antigo
subset(baseTO, baseTO["processo"] == "antigo" & baseTO["baseComp"] == "sim")
#Visualizar base comparativa - Processo novo
subset(baseTO, baseTO["processo"] == "novo" & baseTO["baseComp"] == "sim")
#Cria bases dos processo antigo e processo novo
baseTOProcessoAntigo <- subset(baseTO, baseTO["processo"] == "antigo" & baseTO["baseComp"] == "sim")
baseTOProcessoNovo <- subset(baseTO, baseTO["processo"] == "novo" & baseTO["baseComp"] == "sim")
#Exibe metricas descritivas da base processo antigo
summary(baseTOProcessoAntigo["qtdTotalQuadro"])
summary(baseTOProcessoAntigo["qtdDesligamentos"])
summary(baseTOProcessoAntigo["perTurnover"])
#Exibe metricas descritivas da base processo novo
summary(baseTOProcessoNovo["qtdTotalQuadro"])
summary(baseTOProcessoNovo["qtdDesligamentos"])
summary(baseTOProcessoNovo["perTurnover"])
#Calcula indicadores do processo antigo, para o periodo a ser comparado
perTurnoverAntigo <- (sum(baseTOProcessoAntigo["qtdDesligamentos"]) / sum(baseTOProcessoAntigo["qtdTotalQuadro"]))
zBenchAntigo <- (qnorm(exp(-perTurnoverAntigo),mean=0, sd=1, lower.tail = TRUE, log.p = FALSE))
capSigmaAntigo <- (1.5 + zBenchAntigo)
#Calcula indicadores do processo novo, para o periodo a ser comparado
perTurnoverNovo <- (sum(baseTOProcessoNovo["qtdDesligamentos"]) / sum(baseTOProcessoNovo["qtdTotalQuadro"]))
zBenchNovo<- (qnorm(exp(-perTurnoverNovo),mean=0, sd=1, lower.tail = TRUE, log.p = FALSE))
capSigmaNovo <- (1.5 + zBenchNovo)
#Visualiza os dados para o teste Qui-Quadrado
sum(baseTOProcessoAntigo["qtdDesligamentos"])
sum(baseTOProcessoAntigo["qtdTotalQuadro"]) - sum(baseTOProcessoAntigo["qtdDesligamentos"])
sum(baseTOProcessoNovo["qtdDesligamentos"])
sum(baseTOProcessoNovo["qtdTotalQuadro"]) - sum(baseTOProcessoNovo["qtdDesligamentos"])
#Cria tabela com dados a serem utilizados no teste de Qui-Quadrado
baseQuiQuadrado <- data.frame (desligados = c(sum(baseTOProcessoAntigo["qtdDesligamentos"]) , sum(baseTOProcessoNovo["qtdDesligamentos"]) ),
NaoDesligados = c(sum(baseTOProcessoAntigo["qtdTotalQuadro"]) - sum(baseTOProcessoAntigo["qtdDesligamentos"]) , sum(baseTOProcessoNovo["qtdTotalQuadro"]) - sum(baseTOProcessoNovo["qtdDesligamentos"])))
chisq.test(baseQuiQuadrado)
#Gera gráfico histórico com percentual de turnover, por mês
ggplot(data = baseTO) +
geom_line(aes(x = dtMesAno, y = labelPerTurnover)) +
geom_point(aes(x = dtMesAno, y = labelPerTurnover, size = 3, color= "orange3")) +
geom_text(aes(x = dtMesAno, y = labelPerTurnover, label= format(labelPerTurnover, digits= 3), vjust = 2, angle = 45, fontface="bold")) +
ylim(1,7) +
labs(x= "Meses",
y= "% Turnover",
title="Histórico do percentual de turnover (por mês)")+
theme_light()
#Adiciona uma colula com percentual de turnover formatado, para gerar uma melhor visualização.
baseTO["labelPerTurnover"] <- (baseTO["perTurnover"] * 100)
#Gera gráfico histórico com percentual de turnover, por mês
ggplot(data = baseTO) +
geom_line(aes(x = dtMesAno, y = labelPerTurnover)) +
geom_point(aes(x = dtMesAno, y = labelPerTurnover, size = 3, color= "orange3")) +
geom_text(aes(x = dtMesAno, y = labelPerTurnover, label= format(labelPerTurnover, digits= 3), vjust = 2, angle = 45, fontface="bold")) +
ylim(1,7) +
labs(x= "Meses",
y= "% Turnover",
title="Histórico do percentual de turnover (por mês)")+
theme_light()
#Gera gráfico histórico com a quantidade total de funcionários, por mês
ggplot(data = baseTO) +
geom_col(aes(x = dtMesAno, y = qtdTotalQuadro), fill = "lightsteelblue3") +
geom_text(aes(x = dtMesAno, y = qtdTotalQuadro, label= qtdTotalQuadro, vjust = -1, fontface="bold")) +
ylim(0,2100) +
labs(x= "Meses",
y= "Quantidade total funcionários",
title="Histórico do total de funcionários (por mês)")+
theme_light()
#Gera gráfico histórico com a quantidade de desligamentos, por mês
ggplot(data = baseTO) +
geom_col(aes(x = dtMesAno, y = qtdDesligamentos), fill = "skyblue4") +
geom_text(aes(x = dtMesAno, y = qtdDesligamentos, label= qtdDesligamentos, vjust = -1, fontface="bold")) +
ylim(0,105) +
labs(x= "Meses",
y= "Quantidade desligamentos",
title="Histórico dos desligamentos de funcionários (por mês)") +
theme_light()
baseQuiQuadrado
